---
stages:
  - build
  - scan
  - test

variables:
  HTTPS_PROXY: "${HTTPS_PROXY}"
  HTTP_PROXY: "${HTTP_PROXY}"
  NO_PROXY: "${NO_PROXY}"
  http_proxy: "${HTTP_PROXY}"
  https_proxy: "${HTTPS_PROXY}"
  no_proxy: "${NO_PROXY}"

compile:
  stage: build
  image: golang:1.14
  before_script:
    - git config --global http."https://${GITLAB_SERVER}".proxy ""
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@${GITLAB_SERVER}".insteadOf "https://${GITLAB_SERVER}"

    - echo "[http \"https://${GITLAB_SERVER}\"]" >> ~/.gitconfig
    - echo "        proxy = \"\"" >> ~/.gitconfig
    - cd $CI_PROJECT_DIR
    - apt update -yq && apt install -yq makeself
  tags:
    - k8s
  script:
    - make
  artifacts:
    paths:
      - "out/sgx_agent-*.bin"
    expire_in: 1 week

test:
  stage: test
  image: golang:1.14
  before_script:
    - git config --global http."https://${GITLAB_SERVER}".proxy ""
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@${GITLAB_SERVER}".insteadOf "https://${GITLAB_SERVER}"

    - echo "[http \"https://${GITLAB_SERVER}\"]" >> ~/.gitconfig
    - echo "        proxy = \"\"" >> ~/.gitconfig
    - cd $CI_PROJECT_DIR
    - apt update -yq && apt install -yq make
  tags:
    - k8s
  script:
    - make test
  artifacts:
    paths:
      - "cover.html"
  allow_failure: true

Stylechecker:
  stage: scan
  only:
    - merge_requests
  image: golang:1.14
  tags:
    - gta
  script:
    - gofmt -l .
    - |
      if [ "$(gofmt -l . | wc -l)"  -gt 0 ]; then
             exit 1
      fi

checkmarx:
  stage: scan
  only:
    - merge_requests
  allow_failure: true
  services:
    - docker:dind
  image:
    name: ${DOCKER_REGISTRY_SERVER}:${DOCKER_REGISTRY_PORT}/checkmarx:isecl
    entrypoint: [ '' ]
  tags:
    - docker-checkmarx
  script:
    - cat ${CX_FLOW_CONFIG} > application.yml
    - |
      if [ "$CI_PIPELINE_SOURCE" == "merge_request_event" ]; then 
        java -jar /app/cx-flow.jar --spring.config.location=./application.yml \
          --scan \
          --cx-team="${CHECKMARX_TEAM}" \
          --cx-project="${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}" \
          --app="${CI_PROJECT_NAME}" \
          --project-id=${CI_PROJECT_ID} \
          --merge-id=${CI_MERGE_REQUEST_IID} \
          --bug-tracker=GITLABMERGE \
          --cx-flow.break-build=false \
          --f=.
      else
        java -jar /app/cx-flow.jar --spring.config.location=./application.yml \
          --scan \
          --cx-team="${CHECKMARX_TEAM}" \
          --cx-project="${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}" \
          --app="${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}" \
          --branch="${CI_COMMIT_REF_NAME}" \
          --repo-name="${CI_PROJECT_NAME}" \
          --namespace="${CI_PROJECT_NAMESPACE##*/}" \
          --cx-flow.break-build=false \
          --f=.
      fi
